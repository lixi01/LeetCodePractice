void swap(int* a,int* b)
{
    int temp=*a;
    *a=*b;
    *b=temp;
}

/*整堆*/
void AdjustHeap(int* nums,int i,int size)
{
    int left  =2*i+1;
    int right =2*i+2;
    int max=i;
    if(left<=size-1)
    {
        if(left<size&&nums[left]>nums[max])    max=left;
        if(right<size&&nums[right]>nums[max])  max=right;
        if(i!=max)
        {
            swap(&nums[i],&nums[max]);
            AdjustHeap(nums,max,size);
        }
     
    }
        
}

/*建堆*/
void BuildHeap(int* nums,int size)
{
    for(int i=size/2-1;i>=0;i--)
    {
        AdjustHeap(nums,i,size);
    }
}

/*堆排序*/
void HeapSort(int* nums,int size,int k)
{
    BuildHeap(nums,size);
    for(int i=0;i<k;i++)
    {
        swap(&nums[0],&nums[size-1-i]);
        AdjustHeap(nums,0,size-i-1);
    }
}

int findKthLargest(int* nums, int numsSize, int k) {
    HeapSort(nums,numsSize,k);
    return nums[numsSize-k];
}
